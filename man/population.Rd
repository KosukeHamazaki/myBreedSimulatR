% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/myPopulation.R
\name{population}
\alias{population}
\title{R6 class representing a population}
\description{
population object store specific information about multiple individuals
}
\examples{

## ------------------------------------------------
## Method `population$new`
## ------------------------------------------------

### create simulation information
mySimInfo <- simInfo$new(simName = "Simulation Example",
                         simGeno = TRUE,
                         simPheno = TRUE,
                         nSimGeno = 1,
                         nSimPheno = 3,
                         nCoreMax = 4,
                         nCorePerGeno = 1,
                         nCorePerPheno = 3,
                         saveDataFileName = NULL)
### create specie information
mySpec <- specie$new(nChr = 3,
                     lChr = c(100, 150, 200),
                     specName = "Example 1",
                     ploidy = 2,
                     mutRate = 10^-8,
                     recombRate = 10^-6,
                     chrNames = c("C1", "C2", "C3"),
                     nLoci = c(3, 4, 5),
                     effPopSize = 3,
                     simInfo = mySimInfo,
                     verbose = TRUE)
### create lociInfo object
myLoci <- lociInfo$new(genoMap = NULL, specie = mySpec)
### create traitInfo object
myTrait <- traitInfo$new(lociInfo = myLoci,
                         nMarkers = c(2, 4, 3),
                         nTraits = 2,
                         nQTLs = matrix(c(1, 0, 2,
                                          1, 0, 1),
                                        nrow = 2,
                                        byrow = TRUE),
                         actionTypeEpiSimple = TRUE,
                         qtlOverlap = TRUE,
                         nOverlap = c(1, 0, 1),
                         effCor = 0.6,
                         propDomi = 0.2,
                         interactionMean = c(1, 0))
plot(myTrait, alphaMarker = 0.4)
### simulate haplotype
rawHaplo1 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE),
                    nrow = 2)
colnames(rawHaplo1) <- paste0("Locus_", 1:(3 + 4 + 5))
myHaplo1 <- myBreedSimulatR::haplotype$new(lociInfo = myLoci,
                                           haplo = rawHaplo1)
rawHaplo2 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE),
                    nrow = 2)
colnames(rawHaplo2) <- paste0("Locus_", 1:(3 + 4 + 5))
myHaplo2 <- myBreedSimulatR::haplotype$new(lociInfo = myLoci,
                                           haplo = rawHaplo2)
### create individuals:
myInd1 <-  individual$new(name = "Ind 1",
                          specie = myTrait$lociInfo$specie,
                          traitInfo = myTrait,
                          parent1 = "OkaaSan1",
                          parent2 = "OtouSan1",
                          haplo = myHaplo1,
                          verbose = TRUE)
myInd2 <-  individual$new(name = "Ind 2",
                          specie = myTrait$lociInfo$specie,
                          traitInfo = myTrait,
                          parent1 = "OkaaSan2",
                          parent2 = "OtouSan2",
                          haplo = myHaplo2,
                          verbose = TRUE)
myInd3 <-  individual$new(name = "Ind 3",
                          specie = myTrait$lociInfo$specie,
                          traitInfo = myTrait,
                          parent1 = "OkaaSan1",
                          parent2 = "OtouSan1",
                          haplo = myHaplo1,
                          verbose = TRUE)
myPop <- population$new(name = "My Population 1",
                        generation = 1,
                        traitInfo = myTrait,
                        inds = list(myInd1, myInd2, myInd3),
                        verbose = FALSE)
myPop$trueEGVMat
myPop$plot(plotTarget = "trueAGV",
           plotType = "violin")
myPop$plot(plotTarget = "trueGV",
           plotType = "scatter",
           scatterAxes = c(2, 1))

## ------------------------------------------------
## Method `population$addInds`
## ------------------------------------------------

# create new individual

rawHaplo4 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE),
                    nrow = 2)
colnames(rawHaplo4) <- sprintf(fmt = paste0("SNP\%0", 2,"i"),
                              1:(3 + 4 + 5))
haplo4 <- haplotype$new(lociInfo = myLoci,
                       haplo = rawHaplo4)
myInd4 <-  individual$new(name = "Ind 4",
                         specie = mySpec,
                         parent1 = "OkaaSan",
                         parent2 = "OtouSan",
                         haplo = haplo4,
                         verbose = FALSE)

# add individual
print(self)
self$addInds(myInd4)
print(self)

## ------------------------------------------------
## Method `population$remInds`
## ------------------------------------------------

print(self)
self$remInds("Ind 2")
print(self)

## ------------------------------------------------
## Method `population$inputTrialInfo`
## ------------------------------------------------

print(self$trialInfo)
self$inputTrialInfo()
print(self$trialInfo)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{[string] Name of the population}

\item{\code{generation}}{[integer] Generation of the population}

\item{\code{specie}}{[specie class] Specie of the SNPs
(see:\link[breedSimulatR]{specie})}

\item{\code{traitInfo}}{[traitInfo class] Specific information of traits
(see:\link[myBreedSimulatR]{traitInfo})}

\item{\code{crossInfo}}{[crossInfo class] Information of crossing (including selection scheme)
(see:\link[breedSimulatR]{crossInfo})}

\item{\code{inds}}{[list] list of population's individuals}

\item{\code{trialInfo}}{[trialInfo class] Specific information of field trial}

\item{\code{phenotypicValues}}{[array] individual x traits x replication (3-dimensional array) of phenotypic values}

\item{\code{verbose}}{[boolean] display information}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{nInd}}{[numeric] number of individual in the population}

\item{\code{genoMat}}{[matrix] matrix of all the genotypes of the population
encoded in allele doses. (individuals in row and markers in column)}

\item{\code{trueAGVMat}}{[matrix] matrix of true additive genotypic values}

\item{\code{trueDGVMat}}{[matrix] matrix of true dominant genotypic values}

\item{\code{trueEGVMat}}{[matrix] matrix of true epistatic genotypic values}

\item{\code{trueGVMat}}{[matrix] matrix of true genotypic values}

\item{\code{trueAGVETMat}}{[matrix] matrix of true additive genotypic values specific to each trait}

\item{\code{trueDGVETMat}}{[matrix] matrix of true dominant genotypic values specific to each trait}

\item{\code{trueEGVETMat}}{[matrix] matrix of true epistatic genotypic values specific to each trait}

\item{\code{trueGVETMat}}{[matrix] matrix of true genotypic values specific to each trait}

\item{\code{trueAGVCTMat}}{[matrix] matrix of true additive genotypic values common across trait}

\item{\code{trueDGVCTMat}}{[matrix] matrix of true dominant genotypic values common across trait}

\item{\code{trueEGVCTMat}}{[matrix] matrix of true epistatic genotypic values common across trait}

\item{\code{trueGVCTMat}}{[matrix] matrix of true genotypic values common across trait}

\item{\code{haploArray}}{[array] 3-dimensional array of all the haplotypes of the population
encoded with {0, 1}. (individuals in row, markers in column, and ploidy in 3rd dimension)}

\item{\code{af}}{[named vector] allele frequency}

\item{\code{maf}}{[named vector] minor allele frequency}

\item{\code{heteroRate}}{[named vector] ratio of heterozygotes}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{population$new()}}
\item \href{#method-addInds}{\code{population$addInds()}}
\item \href{#method-remInds}{\code{population$remInds()}}
\item \href{#method-inputTrialInfo}{\code{population$inputTrialInfo()}}
\item \href{#method-inputPhenotypicValues}{\code{population$inputPhenotypicValues()}}
\item \href{#method-print}{\code{population$print()}}
\item \href{#method-plot}{\code{population$plot()}}
\item \href{#method-clone}{\code{population$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new population object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$new(
  name = NULL,
  generation = NA,
  traitInfo = NULL,
  crossInfo = NULL,
  inds = list(),
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{[string] name of the population}

\item{\code{generation}}{[integer] Generation of the population}

\item{\code{traitInfo}}{[traitInfo class] Specific information of traits
(see:\link[myBreedSimulatR]{traitInfo})}

\item{\code{crossInfo}}{[crossInfo class] Information of crossing (including selection scheme)
(see:\link[myBreedSimulatR]{crossInfo})}

\item{\code{inds}}{[individual class or list] list of individuals of the
population (see:\link[breedSimulatR]{individual})}

\item{\code{verbose}}{[boolean] display information}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `population` object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{### create simulation information
mySimInfo <- simInfo$new(simName = "Simulation Example",
                         simGeno = TRUE,
                         simPheno = TRUE,
                         nSimGeno = 1,
                         nSimPheno = 3,
                         nCoreMax = 4,
                         nCorePerGeno = 1,
                         nCorePerPheno = 3,
                         saveDataFileName = NULL)
### create specie information
mySpec <- specie$new(nChr = 3,
                     lChr = c(100, 150, 200),
                     specName = "Example 1",
                     ploidy = 2,
                     mutRate = 10^-8,
                     recombRate = 10^-6,
                     chrNames = c("C1", "C2", "C3"),
                     nLoci = c(3, 4, 5),
                     effPopSize = 3,
                     simInfo = mySimInfo,
                     verbose = TRUE)
### create lociInfo object
myLoci <- lociInfo$new(genoMap = NULL, specie = mySpec)
### create traitInfo object
myTrait <- traitInfo$new(lociInfo = myLoci,
                         nMarkers = c(2, 4, 3),
                         nTraits = 2,
                         nQTLs = matrix(c(1, 0, 2,
                                          1, 0, 1),
                                        nrow = 2,
                                        byrow = TRUE),
                         actionTypeEpiSimple = TRUE,
                         qtlOverlap = TRUE,
                         nOverlap = c(1, 0, 1),
                         effCor = 0.6,
                         propDomi = 0.2,
                         interactionMean = c(1, 0))
plot(myTrait, alphaMarker = 0.4)
### simulate haplotype
rawHaplo1 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE),
                    nrow = 2)
colnames(rawHaplo1) <- paste0("Locus_", 1:(3 + 4 + 5))
myHaplo1 <- myBreedSimulatR::haplotype$new(lociInfo = myLoci,
                                           haplo = rawHaplo1)
rawHaplo2 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE),
                    nrow = 2)
colnames(rawHaplo2) <- paste0("Locus_", 1:(3 + 4 + 5))
myHaplo2 <- myBreedSimulatR::haplotype$new(lociInfo = myLoci,
                                           haplo = rawHaplo2)
### create individuals:
myInd1 <-  individual$new(name = "Ind 1",
                          specie = myTrait$lociInfo$specie,
                          traitInfo = myTrait,
                          parent1 = "OkaaSan1",
                          parent2 = "OtouSan1",
                          haplo = myHaplo1,
                          verbose = TRUE)
myInd2 <-  individual$new(name = "Ind 2",
                          specie = myTrait$lociInfo$specie,
                          traitInfo = myTrait,
                          parent1 = "OkaaSan2",
                          parent2 = "OtouSan2",
                          haplo = myHaplo2,
                          verbose = TRUE)
myInd3 <-  individual$new(name = "Ind 3",
                          specie = myTrait$lociInfo$specie,
                          traitInfo = myTrait,
                          parent1 = "OkaaSan1",
                          parent2 = "OtouSan1",
                          haplo = myHaplo1,
                          verbose = TRUE)
myPop <- population$new(name = "My Population 1",
                        generation = 1,
                        traitInfo = myTrait,
                        inds = list(myInd1, myInd2, myInd3),
                        verbose = FALSE)
myPop$trueEGVMat
myPop$plot(plotTarget = "trueAGV",
           plotType = "violin")
myPop$plot(plotTarget = "trueGV",
           plotType = "scatter",
           scatterAxes = c(2, 1))
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addInds"></a>}}
\if{latex}{\out{\hypertarget{method-addInds}{}}}
\subsection{Method \code{addInds()}}{
Add individuals to the population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$addInds(inds)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inds}}{[individual class or list] list of individuals of the
population (see:\link[breedSimulatR]{individual})}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# create new individual

rawHaplo4 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE),
                    nrow = 2)
colnames(rawHaplo4) <- sprintf(fmt = paste0("SNP\%0", 2,"i"),
                              1:(3 + 4 + 5))
haplo4 <- haplotype$new(lociInfo = myLoci,
                       haplo = rawHaplo4)
myInd4 <-  individual$new(name = "Ind 4",
                         specie = mySpec,
                         parent1 = "OkaaSan",
                         parent2 = "OtouSan",
                         haplo = haplo4,
                         verbose = FALSE)

# add individual
print(self)
self$addInds(myInd4)
print(self)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-remInds"></a>}}
\if{latex}{\out{\hypertarget{method-remInds}{}}}
\subsection{Method \code{remInds()}}{
Remove individuals from the population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$remInds(indNames)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{indNames}}{[character] character vetcor of the individuals' names}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{print(self)
self$remInds("Ind 2")
print(self)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-inputTrialInfo"></a>}}
\if{latex}{\out{\hypertarget{method-inputTrialInfo}{}}}
\subsection{Method \code{inputTrialInfo()}}{
Remove individuals from the population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$inputTrialInfo(
  trialInfoNow = NULL,
  herit = NULL,
  nRep = NULL,
  multiTraitsAsEnvs = FALSE,
  envSpecificEffects = NULL,
  residCor = NULL,
  seedResid = NA
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{trialInfoNow}}{[trialInfo class] trialInfo class object}

\item{\code{herit}}{[numeric] Heritability for each trait (plot-based/line-based)}

\item{\code{nRep}}{[numeric] Replication of the field trial (common to all traits)}

\item{\code{multiTraitsAsEnvs}}{[logical] Treat multiple traits as multiple environments or not}

\item{\code{envSpecificEffects}}{[numeric] Effects specific to each environments / treatments.
If `multiTraitsAsEnvs = FALSE`, envSpecificEffects will be 0 for all traits.}

\item{\code{residCor}}{[matrix] Residual correlation between traits}

\item{\code{seedResid}}{[numeric] Random seed for selecting residuals}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{print(self$trialInfo)
self$inputTrialInfo()
print(self$trialInfo)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-inputPhenotypicValues"></a>}}
\if{latex}{\out{\hypertarget{method-inputPhenotypicValues}{}}}
\subsection{Method \code{inputPhenotypicValues()}}{
Input phenotypic values
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$inputPhenotypicValues(phenotypicValues = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{phenotypicValues}}{[array] individual x traits x replication (3-dimensional array) of phenotypic values
If you use real phenotypic data, please specify your phenotypic values.
If you simulate phenotypic data, please set `phenotypicValues = NULL`.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Display informations about the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot"></a>}}
\if{latex}{\out{\hypertarget{method-plot}{}}}
\subsection{Method \code{plot()}}{
Draw figures for visualization of each data (GVs, phenotypes, and GRM)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$plot(
  plotTarget = "trueGV",
  plotType = "box",
  scatterAxes = 1:min(2, self$traitInfo$nTraits)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plotTarget}}{[character] Target of figure, select either one of
"trueAGV", "trueDGV", "trueEGV", "trueGV", "trueAGVET", "trueDGVET", "trueEGVET",
 "trueGVET", "trueAGVCT", "trueDGVCT", "trueEGVCT", "trueGVCT", "phenotypicValues".}

\item{\code{plotType}}{[character] We offer "box", "violin", "scatter" (or "scatter3d")
to draw figures for genotypic/phenotypic values.}

\item{\code{scatterAxes}}{[numeric/character] If you select "scatter" option for `plotType`,
you should design which traits will be assigned to each axis. You can
define by indices of traits or trait names.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
