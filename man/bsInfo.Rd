% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/myBsInfo.R
\name{bsInfo}
\alias{bsInfo}
\title{R6 Class Representing a Breeding Scheme}
\description{
bsInfo object store specific information of one breeding scheme.
}
\examples{

## ------------------------------------------------
## Method `bsInfo$new`
## ------------------------------------------------

### create simulation information
mySimInfo <- simInfo$new(simName = "Simulation Example",
                         simGeno = TRUE,
                         simPheno = TRUE,
                         #' nSimGeno = 1,
                         #' nSimPheno = 3,
                         #' nCoreMax = 4,
                         #' nCorePerGeno = 1,
                         #' nCorePerPheno = 3,
                         saveDataFileName = NULL)
### create specie information
mySpec <- specie$new(nChr = 3,
                     lChr = c(100, 150, 200),
                     specName = "Example 1",
                     ploidy = 2,
                     mutRate = 10^-8,
                     recombRate = 10^-6,
                     chrNames = c("C1", "C2", "C3"),
                     nLoci = 100,
                     recombRateOneVal = FALSE,
                     effPopSize = 100,
                     simInfo = mySimInfo,
                     verbose = TRUE)
### create lociInfo object
myLoci <- lociInfo$new(genoMap = NULL, specie = mySpec)
plot(myLoci, alpha = 0.1)
### create traitInfo object
myTrait <- traitInfo$new(lociInfo = myLoci,
                         nMarkers = 80,
                         nTraits = 3,
                         nQTLs = c(4, 8, 3),
                         actionTypeEpiSimple = TRUE,
                         qtlOverlap = TRUE,
                         nOverlap = c(2, 3, 0),
                         effCor = 0.1,
                         propDomi = 0.2,
                         interactionMean = c(4, 1, 2))
myTrait$plot(alphaMarker = 0.1)
### create bsInfo object
myBsInfo <- bsInfo$new(simInfo = mySimInfo,
                       specie = mySpec,
                       lociInfo = myLoci,
                       traitInfo = myTrait,
                       geno = NULL,
                       haplo = NULL,
                       founderIsInitPop = TRUE,
                       popNameBase = "Population",
                       initIndNames = NULL,
                       verbose = TRUE)
### create cross information object
for (i in 1:10) {
  myCrossInfo <- crossInfo$new(parentPopulation = myBsInfo$populations[[myBsInfo$generation]],
                               method = "randomMate",
                               nNextPop = 100)
  myBsInfo$nextGeneration(crossInfo = myCrossInfo)
}
geno <- myBsInfo$overGeneration()$genoMat
myBsInfo$print()
myBsInfo$plot(plotTarget = "trueAGV",
              targetTrait = 1:3,
              targetPopulation = 1:11,
              plotType = "jitter")

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{bsName}}{[character] name of this breeding scheme}

\item{\code{simInfo}}{[simInfo class] Simulation information
(see:\link[myBreedSimulatR]{simInfo})}

\item{\code{specie}}{[specie class] Specie of the SNPs
(see:\link[myBreedSimulatR]{specie})}

\item{\code{lociInfo}}{[lociInfo object] information about the individuals haplotypes'
SNPs (see:\link[breedSimulatR]{lociInfo})}

\item{\code{traitInfo}}{[traitInfo class] Specific information of traits
(see:\link[myBreedSimulatR]{traitInfo})}

\item{\code{founderIsInitPop}}{[logical] Founder haplotype will be regarded as first population or not.}

\item{\code{popNameBase}}{[character] base of population's name.}

\item{\code{populations}}{[list] A list of population objects}

\item{\code{crossInfoList}}{[list] A list of crossInfo objects}

\item{\code{generation}}{[list] current generation No. in the breeding scheme}

\item{\code{herit}}{[numeric] Heritability for each trait (plot-based/line-based)}

\item{\code{envSpecificEffects}}{[numeric] Effects specific to each environments / treatments.
If `multiTraitsAsEnvs = FALSE`, envSpecificEffects will be 0 for all traits.}

\item{\code{residCor}}{[matrix] Residual correlation between traits}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{lociEffects}}{[matrix] marker and QTL effects used for crossInfo object}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{bsInfo$new()}}
\item \href{#method-nextGeneration}{\code{bsInfo$nextGeneration()}}
\item \href{#method-removeLatestPop}{\code{bsInfo$removeLatestPop()}}
\item \href{#method-overGeneration}{\code{bsInfo$overGeneration()}}
\item \href{#method-parentInd}{\code{bsInfo$parentInd()}}
\item \href{#method-print}{\code{bsInfo$print()}}
\item \href{#method-plot}{\code{bsInfo$plot()}}
\item \href{#method-clone}{\code{bsInfo$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new specie object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{bsInfo$new(
  bsName = "Undefined",
  simInfo,
  specie,
  lociInfo,
  traitInfo,
  geno = NULL,
  haplo = NULL,
  founderIsInitPop = TRUE,
  popNameBase = "Population",
  initIndNames = NULL,
  herit = NULL,
  envSpecificEffects = NULL,
  residCor = NULL,
  verbose = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{bsName}}{[character] Name of this breeding scheme}

\item{\code{simInfo}}{[simInfo class] Simulation information
(see:\link[myBreedSimulatR]{simInfo})}

\item{\code{specie}}{[specie class] Specie of the SNPs
(see:\link[myBreedSimulatR]{specie})}

\item{\code{lociInfo}}{[lociInfo object] information about the individuals haplotypes'
SNPs (see:\link[breedSimulatR]{lociInfo})}

\item{\code{traitInfo}}{[traitInfo class] Specific information of traits
(see:\link[myBreedSimulatR]{traitInfo})}

\item{\code{geno}}{[data.frame / matrix] genotype of the individuals encoded in allele dose.
If you use real data, you must specify `geno` or `haplo` argument.}

\item{\code{haplo}}{[array] haplotype of the individuals scored with 0 and 1 (3-dimensional array).}

\item{\code{founderIsInitPop}}{[logical] Founder haplotype will be regarded as first population or not.}

\item{\code{popNameBase}}{[character] base of population's name.}

\item{\code{initIndNames}}{[character] NULL or character string vector specifying the individuals
names for initial population. If NULL, \code{rownames(geno)} will be used.}

\item{\code{herit}}{[numeric] Heritability for each trait (plot-based/line-based)}

\item{\code{envSpecificEffects}}{[numeric] Effects specific to each environments / treatments.
If `multiTraitsAsEnvs = FALSE`, envSpecificEffects will be 0 for all traits.}

\item{\code{residCor}}{[matrix] Residual correlation between traits}

\item{\code{verbose}}{[logical] Display info (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `bsInfo` object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{### create simulation information
mySimInfo <- simInfo$new(simName = "Simulation Example",
                         simGeno = TRUE,
                         simPheno = TRUE,
                         #' nSimGeno = 1,
                         #' nSimPheno = 3,
                         #' nCoreMax = 4,
                         #' nCorePerGeno = 1,
                         #' nCorePerPheno = 3,
                         saveDataFileName = NULL)
### create specie information
mySpec <- specie$new(nChr = 3,
                     lChr = c(100, 150, 200),
                     specName = "Example 1",
                     ploidy = 2,
                     mutRate = 10^-8,
                     recombRate = 10^-6,
                     chrNames = c("C1", "C2", "C3"),
                     nLoci = 100,
                     recombRateOneVal = FALSE,
                     effPopSize = 100,
                     simInfo = mySimInfo,
                     verbose = TRUE)
### create lociInfo object
myLoci <- lociInfo$new(genoMap = NULL, specie = mySpec)
plot(myLoci, alpha = 0.1)
### create traitInfo object
myTrait <- traitInfo$new(lociInfo = myLoci,
                         nMarkers = 80,
                         nTraits = 3,
                         nQTLs = c(4, 8, 3),
                         actionTypeEpiSimple = TRUE,
                         qtlOverlap = TRUE,
                         nOverlap = c(2, 3, 0),
                         effCor = 0.1,
                         propDomi = 0.2,
                         interactionMean = c(4, 1, 2))
myTrait$plot(alphaMarker = 0.1)
### create bsInfo object
myBsInfo <- bsInfo$new(simInfo = mySimInfo,
                       specie = mySpec,
                       lociInfo = myLoci,
                       traitInfo = myTrait,
                       geno = NULL,
                       haplo = NULL,
                       founderIsInitPop = TRUE,
                       popNameBase = "Population",
                       initIndNames = NULL,
                       verbose = TRUE)
### create cross information object
for (i in 1:10) {
  myCrossInfo <- crossInfo$new(parentPopulation = myBsInfo$populations[[myBsInfo$generation]],
                               method = "randomMate",
                               nNextPop = 100)
  myBsInfo$nextGeneration(crossInfo = myCrossInfo)
}
geno <- myBsInfo$overGeneration()$genoMat
myBsInfo$print()
myBsInfo$plot(plotTarget = "trueAGV",
              targetTrait = 1:3,
              targetPopulation = 1:11,
              plotType = "jitter")

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-nextGeneration"></a>}}
\if{latex}{\out{\hypertarget{method-nextGeneration}{}}}
\subsection{Method \code{nextGeneration()}}{
create next population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{bsInfo$nextGeneration(crossInfo)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{crossInfo}}{[crossInfo class] Information of crossing (including selection scheme)
(see:\link[myBreedSimulatR]{crossInfo})}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-removeLatestPop"></a>}}
\if{latex}{\out{\hypertarget{method-removeLatestPop}{}}}
\subsection{Method \code{removeLatestPop()}}{
remove latest population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{bsInfo$removeLatestPop()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-overGeneration"></a>}}
\if{latex}{\out{\hypertarget{method-overGeneration}{}}}
\subsection{Method \code{overGeneration()}}{
assemble populations over generation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{bsInfo$overGeneration(targetPop = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{targetPop}}{[character / numeric] population names or No.s you want to assemble.
If NULL, assemble all the populations}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-parentInd"></a>}}
\if{latex}{\out{\hypertarget{method-parentInd}{}}}
\subsection{Method \code{parentInd()}}{
search parents of an individual of interest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{bsInfo$parentInd(indName)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{indName}}{[character] individual name of interest}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Display information about the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{bsInfo$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot"></a>}}
\if{latex}{\out{\hypertarget{method-plot}{}}}
\subsection{Method \code{plot()}}{
Draw figures for visualization of each data (GVs)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{bsInfo$plot(
  plotTarget = "trueGV",
  targetTrait = 1:self$traitInfo$nTraits,
  targetPopulation = 1:self$generation,
  plotType = "box",
  facet_grid = FALSE,
  unitSd = 1,
  colorVecBase = c("black", "red", "green", "blue", "lightblue", "purple", "yellow",
    "gray", "pink", "orange"),
  widthVecBase = c(1.5, 0.8, 0.8),
  dashVecBase = c("solid", "dash", "dash")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plotTarget}}{[character] Target of figure, select either one of
"trueAGV", "trueDGV", "trueEGV", "trueGV", "trueAGVET", "trueDGVET", "trueEGVET",
 "trueGVET", "trueAGVCT", "trueDGVCT", "trueEGVCT", "trueGVCT".}

\item{\code{targetTrait}}{[numeric] Target traits. character is OK, but numeric vector
corresponding to target traits is preferred.}

\item{\code{targetPopulation}}{[numeric] Target populations. character is OK, but numeric vector
corresponding to target traits is preferred.}

\item{\code{plotType}}{[character] We offer "box", "violin", "jitter", "lines"
to draw figures for genotypic values.}

\item{\code{facet_grid}}{[logical] When you choose "jitter" for plotType,
you can select whether you display the plot for wach trait with grid.}

\item{\code{unitSd}}{[numeric] When you choose "lines", we will show the mean, mean + unitSd * sd,
mean - unitSd * sd.}

\item{\code{colorVecBase}}{[character] vector representing color of the line for traits in "lines" option}

\item{\code{widthVecBase}}{[numeric] vector representing width of the line in "lines" option}

\item{\code{dashVecBase}}{[character]vector representing solid / dash in "lines" option}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{bsInfo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
