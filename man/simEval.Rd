% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mySimEval.R
\name{simEval}
\alias{simEval}
\title{R6 Class Representing a Breeding Scheme}
\description{
simEval object store specific information of simulation results of breeding scheme.
}
\examples{

## ------------------------------------------------
## Method `simEval$new`
## ------------------------------------------------

### create simulation information
mySimInfo <- simInfo$new(simName = "Simulation Example",
                         simGeno = TRUE,
                         simPheno = TRUE,
                         #' nSimGeno = 1,
                         #' nSimPheno = 3,
                         #' nCoreMax = 4,
                         #' nCorePerGeno = 1,
                         #' nCorePerPheno = 3,
                         saveDataFileName = NULL)
### create specie information
mySpec <- specie$new(nChr = 3,
                     lChr = c(100, 150, 200),
                     specName = "Example 1",
                     ploidy = 2,
                     mutRate = 10^-8,
                     recombRate = 10^-6,
                     chrNames = c("C1", "C2", "C3"),
                     nLoci = 100,
                     recombRateOneVal = FALSE,
                     effPopSize = 100,
                     simInfo = mySimInfo,
                     verbose = TRUE)
### create lociInfo object
myLoci <- lociInfo$new(genoMap = NULL, specie = mySpec)
plot(myLoci, alpha = 0.1)
### create traitInfo object
myTrait <- traitInfo$new(lociInfo = myLoci,
                         nMarkers = 80,
                         nTraits = 3,
                         nQTLs = c(4, 8, 3),
                         actionTypeEpiSimple = TRUE,
                         qtlOverlap = TRUE,
                         nOverlap = c(2, 3, 0),
                         effCor = 0.1,
                         propDomi = 0.2,
                         interactionMean = c(4, 1, 2))
myTrait$plot(alphaMarker = 0.1)
### create bsInfo object
myBsInfo <- bsInfo$new(simInfo = mySimInfo,
                       specie = mySpec,
                       lociInfo = myLoci,
                       traitInfo = myTrait,
                       geno = NULL,
                       haplo = NULL,
                       founderIsInitPop = TRUE,
                       popNameBase = "Population",
                       initIndNames = NULL,
                       verbose = TRUE)
### create cross information object
for (i in 1:10) {
  myCrossInfo <- crossInfo$new(parentPopulation = myBsInfo$populations[[myBsInfo$generation]],
                               method = "randomMate",
                               nNextPop = 100)
  myBsInfo$nextGeneration(crossInfo = myCrossInfo)
}
geno <- myBsInfo$overGeneration()$genoMat
myBsInfo$print()
myBsInfo$plot(plotTarget = "trueAGV",
              targetTrait = 1:3,
              targetPopulation = 1:11,
              plotType = "jitter")

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{simEvalName}}{[character] Name of this simulation of breeding schemes}

\item{\code{simBsList}}{[list] list of simulation results of breeding scheme
(see:\link[myBreedSimulatR]{simBs}; \link[myBreedSimulatR]{simBsOpt})}

\item{\code{verbose}}{[logical] Display info (optional)}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{simEval$new()}}
\item \href{#method-prepareSimRes}{\code{simEval$prepareSimRes()}}
\item \href{#method-print}{\code{simEval$print()}}
\item \href{#method-plot}{\code{simEval$plot()}}
\item \href{#method-clone}{\code{simEval$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new specie object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{simEval$new(simEvalName = "Undefined", simBsList, verbose = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{simEvalName}}{[character] Name of this evaluation of simulation results}

\item{\code{simBsList}}{[list] list of simulation results of breeding scheme
(see:\link[myBreedSimulatR]{simBs}; \link[myBreedSimulatR]{simBsOpt})}

\item{\code{verbose}}{[logical] Display info (optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `simEval` object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{### create simulation information
mySimInfo <- simInfo$new(simName = "Simulation Example",
                         simGeno = TRUE,
                         simPheno = TRUE,
                         #' nSimGeno = 1,
                         #' nSimPheno = 3,
                         #' nCoreMax = 4,
                         #' nCorePerGeno = 1,
                         #' nCorePerPheno = 3,
                         saveDataFileName = NULL)
### create specie information
mySpec <- specie$new(nChr = 3,
                     lChr = c(100, 150, 200),
                     specName = "Example 1",
                     ploidy = 2,
                     mutRate = 10^-8,
                     recombRate = 10^-6,
                     chrNames = c("C1", "C2", "C3"),
                     nLoci = 100,
                     recombRateOneVal = FALSE,
                     effPopSize = 100,
                     simInfo = mySimInfo,
                     verbose = TRUE)
### create lociInfo object
myLoci <- lociInfo$new(genoMap = NULL, specie = mySpec)
plot(myLoci, alpha = 0.1)
### create traitInfo object
myTrait <- traitInfo$new(lociInfo = myLoci,
                         nMarkers = 80,
                         nTraits = 3,
                         nQTLs = c(4, 8, 3),
                         actionTypeEpiSimple = TRUE,
                         qtlOverlap = TRUE,
                         nOverlap = c(2, 3, 0),
                         effCor = 0.1,
                         propDomi = 0.2,
                         interactionMean = c(4, 1, 2))
myTrait$plot(alphaMarker = 0.1)
### create bsInfo object
myBsInfo <- bsInfo$new(simInfo = mySimInfo,
                       specie = mySpec,
                       lociInfo = myLoci,
                       traitInfo = myTrait,
                       geno = NULL,
                       haplo = NULL,
                       founderIsInitPop = TRUE,
                       popNameBase = "Population",
                       initIndNames = NULL,
                       verbose = TRUE)
### create cross information object
for (i in 1:10) {
  myCrossInfo <- crossInfo$new(parentPopulation = myBsInfo$populations[[myBsInfo$generation]],
                               method = "randomMate",
                               nNextPop = 100)
  myBsInfo$nextGeneration(crossInfo = myCrossInfo)
}
geno <- myBsInfo$overGeneration()$genoMat
myBsInfo$print()
myBsInfo$plot(plotTarget = "trueAGV",
              targetTrait = 1:3,
              targetPopulation = 1:11,
              plotType = "jitter")

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prepareSimRes"></a>}}
\if{latex}{\out{\hypertarget{method-prepareSimRes}{}}}
\subsection{Method \code{prepareSimRes()}}{
start simulation & summary results of breeding scheme
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{simEval$prepareSimRes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Display information about the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{simEval$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot"></a>}}
\if{latex}{\out{\hypertarget{method-plot}{}}}
\subsection{Method \code{plot()}}{
Draw figures for visualization of simulation results for summary statistics to compare strategies
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{simEval$plot(
  targetTrait = 1,
  targetPopulation = NULL,
  plotType = "box",
  plotTarget = "max",
  returnGain = TRUE,
  plotGVMethod = "true",
  adjust = 1e-05
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{targetTrait}}{[numeric] Target trait. character is OK, but numeric vector
corresponding to target traits is preferred. It should be a vector with length 1.}

\item{\code{targetPopulation}}{[numeric] Target populations. character is OK, but numeric vector
corresponding to target traits is preferred.}

\item{\code{plotType}}{[character] We offer "box", "violin", "lines", "density"
to draw figures for simulation results.}

\item{\code{plotTarget}}{[character] You should select which summary statistics will be plotted. It should be a vector with length 1.}

\item{\code{returnGain}}{[logical] Return genetic gain (difference against initial population) or not}

\item{\code{plotGVMethod}}{[character] Which type of GV (true GV or estimated GV) will be used for plotting the simulation results}

\item{\code{adjust}}{[numeric] the bandwidth used is actually adjust*bw. This makes it easy to specify values like ‘half the default’ bandwidth.
(see: `adjust` in \link[stats]{density})}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{simEval$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
